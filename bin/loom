#!/usr/bin/env php
<?php

use Loom\Spinner\Command\AddHostsEntryCommand;
use Loom\Spinner\Command\AttachCommand;
use Loom\Spinner\Command\DestroyCommand;
use Loom\Spinner\Command\ListEnvironmentsCommand;
use Loom\Spinner\Command\SpinCommand;
use Loom\Spinner\Command\StartCommand;
use Loom\Spinner\Command\StopCommand;
use Symfony\Component\Console\Application;

$localAutoloadPath = sprintf('%s/vendor/autoload.php', dirname(__DIR__));
$installedAutoloadPath = sprintf('%s/autoload.php', dirname(__DIR__, 3));

if (file_exists($localAutoloadPath)) {
    require $localAutoloadPath;
} else {
    require $installedAutoloadPath;
}

$composerJsonPath = sprintf('%s/composer.json', dirname(__DIR__));
$composerJson = null;

if (file_exists($composerJsonPath)) {
    try {
        if (!$composerJsonRaw = file_get_contents($composerJsonPath)) {
            throw new \Exception('Could not find the composer.json file');
        }
        $composerJson = json_decode($composerJsonRaw, true);
    } catch (\Exception $exception) {
        exit;
    }
}

$application = new Application('Loom Spinner', $composerJson['version'] ?? 'UNKNOWN');

$application->add(new DestroyCommand());
$application->add(new SpinCommand());
$application->add(new StartCommand());
$application->add(new StopCommand());
$application->add(new ListEnvironmentsCommand());
$application->add(new AttachCommand());
$application->add(new AddHostsEntryCommand());

try {
    $application->run();
} catch (\Exception $exception) {
    die($exception->getMessage());
}